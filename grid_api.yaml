openapi: 3.1.0
info:
  version: 1.0.0
  title: Fluency Grid Management API
  description: Grid Management API

servers:
  - url: https://develop.cloud.fluencysecurity.com

components:
  responses:
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"            
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Use bearer token
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    EntityInfo:
      type: object
      properties:
        integration:
          type: string
        integrationName:
          type: string 
        doc: 
          type: object         
    Asset:
      type: object
      properties:
        name:
          type: string
        fqdn:
          type: string
        description:
          type: string  
        model:
          type: string
        platform:
          type: string
        category:
          type: string  
        machineType:
          type: string
        location:
          type: string    
        os:
          type: string
        osVersion:
          type: string
        vender:
          type: string 
        agentID:
          type: string
        lastLoggedInUser:
          type: string
        serialNumber:
          type: string
        region:
          type: string
        instanceID:
          type: string
        publicIP:
          type: string
        privateIP:
          type: string
        username:
          type: string
        createdOn:
          type: string 
          format: date-time  
        flags:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: object      # <----------
            properties:
              key: 
                type: string 
              value: 
                type: string
        infos:
          type: array
          items: 
            $ref: '#/components/schemas/EntityInfo'
    User:
      type: object
      properties:
        givenName:
          type: string
        surname:
          type: string
        email:
          type: string  
        displayName:
          type: string
        phone:
          type: string
        title:
          type: string  
        location:
          type: string
        language:
          type: string    
        username:
          type: string
        createdOn:
          type: string
          format: date-time  
        groups:
          type: array
          items:
            type: string
        infos:
          type: array
          items: 
            $ref: '#/components/schemas/EntityInfo'
    FPLTableColumnInfo:
      type: object
      properties:
        name: 
          type: string 
        unit: 
          type: string
        columnType: 
          type: string    
    FPLDataTable:
      type: object
      properties:
        rowCount:
          description: table row count 
          type: integer
        columns:
          type: array
          items: 
            $ref: '#/components/schemas/FPLTableColumnInfo' 
        rows:
          type: array
          items: 
            type: object  
    FPLDataObject:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        table: 
          $ref: '#/components/schemas/FPLDataTable'
    FPLReportResult:
      type: object
      properties:
        objects:
          type: array
          items: 
            $ref: '#/components/schemas/FPLDataObject'
    RunInvestigationRequest:
      type: object
      properties:
        reportName:
          type: string
        name:
          description: User/Asset name to be investigated.
          type: string  
        rangeFrom:
          description: The start time of the investigation.
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        rangeTo:
          description: The end time of the investigation.
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
      required:
        - reportName
        - name    
    RunInvestigationResponse:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/FPLReportResult'
            
security:
  - bearerAuth: []

paths:
  /openapi/run_entity_investigation:
    post:
      summary: run an investigation on one asset or user
      operationId: runEntityInvestigation
      requestBody:
        description: Run investigation report over one asset or user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunInvestigationRequest"
      parameters:
        - name: account
          in: query
          required: true
          description: customer account name
          schema: 
            type: string
        - name: tenant
          in: query
          required: false
          description: customer tenant name
          schema: 
            type: string
      responses:
        '200':
          description: Return investigation result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunInvestigationResponse"
        '404':
          $ref: "#/components/responses/NotFound"
        '401':
          $ref: "#/components/responses/Unauthorized"          
        '403':
          $ref: "#/components/responses/Forbidden"          
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/InternalServerError"

  /openapi/assets/{name}:
    get:
      descriptions: get asset by name or EDR agentID
      operationId: getAssetByName
      parameters:
        - name: name
          in: path
          description: Asset Name
          required: true
          schema:
            type: string
        - name: account
          in: query
          required: true
          description: customer account name
          schema: 
            type: string
        - name: tenant
          in: query
          required: false
          description: customer tenant name
          schema: 
            type: string
      responses:
        '200':
          description: Return asset information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asset"
        '404':
          $ref: "#/components/responses/NotFound"
        '401':
          $ref: "#/components/responses/Unauthorized"          
        '403':
          $ref: "#/components/responses/Forbidden"          
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/InternalServerError"
  /openapi/users/{name}:
    get:
      descriptions: get user by name or email
      operationId: getUserByName
      parameters:
        - name: name
          in: path
          description: UserName or Email
          required: true
          schema:
            type: string
        - name: account
          in: query
          required: true
          description: customer account name
          schema: 
            type: string
        - name: tenant
          in: query
          required: false
          description: customer tenant name
          schema: 
            type: string
      responses:
        '200':
          description: Return user information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '404':
          $ref: "#/components/responses/NotFound"
        '401':
          $ref: "#/components/responses/Unauthorized"          
        '403':
          $ref: "#/components/responses/Forbidden"          
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/InternalServerError"
